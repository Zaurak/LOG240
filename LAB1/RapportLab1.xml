<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN" "http://docbook.org/xml/4.2/docbookx.dtd">

<article>
  <articleinfo>
    <title>LOG240 - Rapport de Lab 1</title>
    <authorgroup>
      <author>
        <firstname>Asma</firstname>
        <surname>Alibert</surname>
      </author>
      <author>
        <firstname>Quentin</firstname>
        <surname>Marques</surname>
      </author>
    </authorgroup>
  </articleinfo>
  
  <section>
  	<title>Énoncé du sujet</title>
	  <para>
		  Recopier ici l'énoncé du sujet.
  	</para>
  </section>
  
  <section>
    <title>Installation de l'environnement</title>
    <section>
      <title>Connexion à la machine virtuelle VMware</title>
      <para>
        On se connecte à la machine virtuelle VMware pour s'assurer de son bon fonctionnement. Le laboratoire étant réalisé sous environnement Windows, nous utilisons le terminal PuTTY pour nous connecter avec les paramètres suivants:
        <variablelist>
          <varlistentry>
            <term>adresse IP:</term>
            <listitem>
              <para>Log240-20133-14.logti.etsmtl.ca</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>port:</term>
            <listitem>
              <para>22</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>protocole:</term>
            <listitem>
              <para>SSH</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </para>
        
      <screenshot>
        <graphic width="275px" fileref="screenshots/01-ConnexionPutty.png"></graphic>
        <caption>
          Connexion SSH au serveur Ubuntu en utilisant PuTTY
        </caption>
      </screenshot>      
        
      <para>
        Un terminal s'ouvre alors et nous propose de nous connecter.
        Nous utilisons les identifiants suivants:
        <variablelist>
          <varlistentry>
            <term>login:</term>
            <listitem>
              <para>system</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>password:</term>
            <listitem>
              <para>SystemPass14</para>
            </listitem>
          </varlistentry>
        </variablelist>
        <note>
          <para>
            Sur un terminal *NIX, les mots de passe ne s'affichent pas lors de la saisie par soucis de sécurité, c'est pourquoi la sortie console suivante en est dépourvu.
          </para>
        </note>
      </para>

      <screen>login as: <userinput>system</userinput>
system@Log240-20133-14.logti.etsmtl.ca's password:
<computeroutput>Linux log240-20133-14 2.6.32-51-generic-pae 
#113-Ubuntu SMP Wed Aug 21 20:02:16 UTC 2013 i686 GNU/Linux
Ubuntu 10.04.4 LTS

Welcome to Ubuntu!
 * Documentation:  https://help.ubuntu.com/

  System information as of Mon Sep 16 15:48:01 EDT 2013

  System load: 0.53              Memory usage: 18%   Processes:       75
  Usage of /:  76.1% of 4.92GB   Swap usage:   0%    Users logged in: 0

  Graph this data and manage this system at https://landscape.canonical.com/

6 packages can be updated.
3 updates are security updates.

New release 'precise' available.
Run 'do-release-upgrade' to upgrade to it.

Last login: Mon Sep 16 15:45:09 2013 from logti-a3324-19.ens.ad.etsmtl.ca</computeroutput>
system@log240-20133-14:~$</screen>

      <note>
        <para>
          Par soucis de clarté, l'invite de commande du shell (prompt) sera abrégé <symbol>$</symbol> par la suite.
        </para>
      </note>
      <para>
        On constate que la machine virtuelle est correctement lancée et en état de fonctionner.
      </para>
    </section>
    <section>
      <title>Gestionnaire de sources</title>
		<section>
		  <title>Configuration de SVN</title>
		<para>
		  Pour assurer le suivi du code source, nous utilisons le gestionnaire de sources Subversion (SVN). Nous commençons par changer les droits sur le dossier <filename>/opt</filename> qui sera notre dossier de travail pour lancer SVN en tant que daemon.
		</para>
	  
		<screen>$ <userinput><command>cd</command> /opt</userinput>
$ <userinput><command>sudo /bin/chown</command> -R www-data:svnusers svn</userinput>
[sudo] password for system:
$ <userinput><command>sudo /bin/chmod</command> -R u+wrx,g+wrx,o-wrx svn</userinput>
$ <userinput><command>sudo /usr/bin/svnserve</command> -d</userinput>
		</screen>
		
		<para>
		  On ajoute ensuite les différents utilisateurs:
		  <variablelist>
			<varlistentry>
			  <term>client:</term>
			  <listitem>
				<para>L'utilisateur que notre client utilisera pour accèder au code</para>
				<screen>
$ <userinput><command>sudo /usr/sbin/useradd</command> client -G svnusers 
-c "Utilisateur client (BudgetPersonnel2000)" -m</userinput>
$ <userinput><command>sudo /usr/bin/passwd</command> client</userinput>
Enter new UNIX password:
Retype new UNIX password:
<computeroutput>passwd: password updated successfully</computeroutput></screen>
			  </listitem>
			</varlistentry>
			<varlistentry>
			  <term>asma:</term>
			  <listitem>
				<para>L'utilisateur du développeur 1</para>
				<screen>
$ <userinput><command>sudo /usr/sbin/useradd</command> asma -G svnusers 
-c "Utilisateur developpeur (MaintenancePlus)" -m</userinput>
$ <userinput><command>sudo /usr/bin/passwd</command> asma</userinput>
Enter new UNIX password:
Retype new UNIX password:
<computeroutput>passwd: password updated successfully</computeroutput></screen>
			  </listitem>
			</varlistentry>
			<varlistentry>
			  <term>quentin:</term>
			  <listitem>
				<para>L'utilisateur du développeur 2</para>
				<screen>
$ <userinput><command>sudo /usr/sbin/useradd</command> quentin -G svnusers 
-c "Utilisateur developpeur (MaintenancePlus)" -m</userinput>
$ <userinput><command>sudo /usr/bin/passwd</command> quentin</userinput>
Enter new UNIX password:
Retype new UNIX password:
<computeroutput>passwd: password updated successfully</computeroutput></screen>
			  </listitem>
			</varlistentry>
		  </variablelist>
		  
		  <important>
			<para>
			  Tout les mots de passes utilisés sont identiques aux noms des utilisateurs. Il est évident que ceci ne constitue pas une bonne pratique de sécurité mais, dans un soucis de simplification du rapport, nous avons décidé de faire ainsi.
			</para>
		  </important>
		</para>
		
		<tip>
		  <para>
			Nous pouvons vérifier que ces utilisateurs ont bien été crées sur la VMware de la manière suivante:
			<screen>$ <userinput><command>cat</command> /etc/passwd | grep "Utilisateur" | cut -d: -f1</userinput><computeroutput>
client
asma
quentin</computeroutput></screen>
		  </para>
		</tip>
		  </section>
		  <section>
			<title>Import/Export du code source vers SVN</title>
		    <para>Nous envoyons le code source de FinanceJ sur le dépôt SVN nouvellement configuré. 
			Nous utilisons le logiciel TortoiseSVN pour réaliser cette opération.
			Dans un premier temps, nous créons un dossier <filename>Code</filename> contenant les dossiers <filename>branches</filename>, <filename>tags</filename> et <filename>trunk</filename>. Nous avons ajouté à ce dernier dossier les codes sources du projet FinanceJ.
			<caution>
			  <para>
				Le vocabulaire de Subversion différe de celui couramment utilisé: 
				L'importation SVN est un envoi depuis un poste local vers le serveur et inversement concernant l'exportation. 
				Afin de lever l'ambiguïté, nous utiliserons les termes d'<emphasis>import/export SVN</emphasis> en opposition aux termes <emphasis>import/export</emphasis>.
			  </para>
			</caution>
		  </para>

        <screenshot>
          <graphic width="300px" fileref="screenshots/04-ImportSVN.png"></graphic>
          <caption>
            Exportation (import SVN) du dépot en utilisant TortoiseSVN
          </caption>
        </screenshot>
        
        <screenshot>
          <graphic width="200px" fileref="screenshots/05-ImportSVNPassword.png"></graphic>
          <caption>
            Confirmation du mot de passe SVN
          </caption>
        </screenshot>
        
        <screenshot>
          <graphic width="400px" fileref="screenshots/06-ImportSVNSuccess.png"></graphic>
          <caption>
            Résultat de l'exportation (import SVN)
          </caption>
        </screenshot>

		<para>
		  Nous vérifions ensuite que l'envoi a correctement fonctionné en essayant d'importer (export SVN) le code envoyé dans un second dossier en local.
		  <note>
		    <para>
			  Nous aurions également pu effectuer un <command>ls</command> directement sur le serveur via PuTTY mais des restrictions sur les VMwares nous en empêchent.
			</para>
		  </note>
		</para>

        <screenshot>
          <graphic width="300px" fileref="screenshots/07-TestExportSVN.png"></graphic>
          <caption>
            Vérification de l'importation (export SVN) dans le dossier <filename>Codebis</filename>
          </caption>
        </screenshot>
        
        <screenshot>
          <graphic width="400px" fileref="screenshots/08-TestExportSVNSuccess.png"></graphic>
          <caption>
            Succès du test d'importation (export SVN) dans le dossier <filename>Codebis</filename>
          </caption>
        </screenshot>
	  </section>
	</section>
	<section>
	  <title>Système de suivi de projet</title>
	  <section>
	    <title>Configuration de Trac</title>
        <para>
		  Nous avons utilisé Trac, un système minimaliste de bug tracking et de wiki permettant la suivi de projet de développement.
		  Tout d'abord, nous avons vérifié que Trac était correctement installé avec la bonne version:
		</para>
		<screen>$ <userinput><command>tracd</command> --version</userinput>
<computeroutput>tracd 0.11.7</computeroutput></screen>

        <para>Nous créons ensuite les 3 utilisateurs Trac de la manière suivante:</para>
		<screen>
$ <userinput><command>cd</command> trac/conf/</userinput>
$ <userinput><command>sudo htpasswd</command> trac.htpasswd client</userinput>
<computeroutput>New password:
Re-type new password:
Adding password for user client
</computeroutput></screen>

		<screen>
$ <userinput><command>sudo htpasswd</command> trac.htpasswd asma</userinput>
<computeroutput>New password:
Re-type new password:
Adding password for user asma
</computeroutput></screen>

		<screen>
$ <userinput><command>sudo htpasswd</command> trac.htpasswd quentin</userinput>
<computeroutput>New password:
Re-type new password:
Adding password for user quentin
</computeroutput></screen>

		<tip>
		  <para>Nous pouvons vérifier que les utilisateurs ont correctement été rajouté de la manière suivante:</para>
		  <screen>
$ <userinput><command>cat</command> trac.htpasswd | cut -d: -f1</userinput>
<computeroutput>admin
asma
quentin
client</computeroutput></screen>
		</tip>
		</section>
		<section>
		  <title>Gestion des permissions de Trac</title>
		<para>
		  Nous nous sommes ensuite connecter à l'interface web de Trac. Nous nous sommes connecté en tant qu'administrateur avec les identifiants par défaut suivants:
		  <variablelist>
            <varlistentry>
              <term>login:</term>
              <listitem>
                <para>admin</para>
              </listitem>
            </varlistentry>
            <varlistentry>
              <term>password:</term>
              <listitem>
                <para>admin</para>
              </listitem>
            </varlistentry>
          </variablelist>
		</para>
		<screenshot>
          <graphic width="400px" fileref="screenshots/10-TracLogin.png"></graphic>
          <caption>
            Connexion à l'interface web de Trac en admin
          </caption>
        </screenshot>

		<para>
		  Nous avons ensuite définit les permissions de chaque utilisateur de Trac en suivant les contraintes suivantes:
		  <itemizedlist>
			<listitem>Il n'y a qu'un seul développeur ayant les droits d'administrateur (asma)</listitem>
			<listitem>Les développeurs doivent avoir accès à la plupart des fonctionnalités exceptés les tâches d'administration</listitem>
			<listitem>Le client peut uniquement consulter Trac et créer des tickets pour remonter des anomalies aux développeurs</listitem>
		  </itemizedlist>
		</para>
		<note>
		  <para>
		    Afin d'éviter de redéfinir chaque permission pour chaque nouvel utilisateur éventuel, nous avons décidé de créer deux groupes de permissions:
			<itemizedlist>
			  <listitem>developpers</listitem>
			  <listitem>clients</listitem>
			</itemizedlist>
			Ceci nous permet d'ajouter simplement des developpeurs ou des comptes clients tout en conservant des permissions cohérentes.
		  </para>
		</note>
        <screenshot>
          <graphic width="400px" fileref="screenshots/11-TracPermissions.png"></graphic>
          <caption>
            Modifications des permissions clients et développeurs
          </caption>
        </screenshot>
		</section>
		<section>
		  <title>Fonctionnalités de Trac</title>
		  <section>
		    <title>Tickets</title>
			<para>
		      Les tickets dans Trac peuvent être utilisés pour assigner des tâches de projet, pour faire des requêtes, des reports de bugs et du support logiciel.
		  	  Ici nous avons créé 2 requêtes / tickets / tâches. À l’aide de Trac, nous avons la possibilité de:
			  <itemizedlist>
			    <listitem>Définir la priorité de la tâche</listitem>
				<listitem>Préciser le composant affecté</listitem>
				<listitem>Estimer le nombre d'heures pour la tâche</listitem>
				<listitem>Préciser la version</listitem>
				<listitem>Ajouter des commentaires</listitem>
				<listitem>Joindre des fichiers</listitem>
				<listitem>etc.</listitem>
			  </itemizedlist>
			</para>
			<screenshot>
			  <graphic width="400px" fileref="screenshots/12-TracTicket1.png"></graphic>
			  <graphic width="400px" fileref="screenshots/13-TracTicket2.png"></graphic>
			  <caption>
				Création de tickets Trac
			  </caption>
			  
			</screenshot>
		  </section><!-- section Tickets -->
		</section><!-- section Fonctionnalités de Trac -->
    </section><!-- section ? -->
  </section>
</article>
